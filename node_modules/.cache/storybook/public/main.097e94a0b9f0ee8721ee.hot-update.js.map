{"version":3,"file":"main.097e94a0b9f0ee8721ee.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;;;;AAgBA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AAEA;AACA;;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AADA;AALA;AAFA;AADA;AAkBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AADA;AAnBA;AADA;AA6BA;AAEA","sources":["webpack://ui_kit/./src/Collapse/Collapse.tsx"],"sourcesContent":["import React, {FC} from 'react'\nimport { useState, useEffect, useRef } from 'react';\nimport './collapse.css'\n// import iconDown from '../Assets/icondown.png'\n// import iconUp from '../Assets/iconup.png'\n\n\ninterface CollpaseProps {\n    open?: boolean;\n    header: string | React.ReactNode;\n    headerClassName?: string;\n    titleClassName?: string;\n    iconButtonClassName?: string;\n    contentClassName?: string;\n    children:string,\n    contentContainerClassName?: string;\n    collapsibleClassName?: string;\n}\n\n\nexport const Collapse = ({\n    open,\n    collapsibleClassName = \"collapsible-card-edonec\",\n    headerClassName = \"collapsible-header-edonec\",\n    titleClassName = \"title-text-edonec\",\n    iconButtonClassName = \"collapsible-icon-button-edonec\",\n    contentClassName = \"collapsible-content-edonec\",\n    contentContainerClassName = \"collapsible-content-padding-edonec\",\n    children,\n    header\n\n}: CollpaseProps) => {\n    const [isOpen, setIsOpen] = useState(open);\n    const [height, setHeight] = useState <number | undefined>(open ? undefined : 0)\n    const handleFilterOpening = () => {\n        setIsOpen((prev) => !prev);\n        const ref = useRef<HTMLDivElement>(null);\n        const handleFilterOpening = () => {\n            setIsOpen((prev) => !prev);\n          };\n          useEffect(() => {\n            if (!height || !isOpen || !ref.current) return undefined;\n            // @ts-ignore\n            const resizeObserver = new ResizeObserver((el) => {\n              setHeight(el[0].contentRect.height);\n            });\n            resizeObserver.observe(ref.current);\n            return () => {\n              resizeObserver.disconnect();\n            };\n          }, [height, isOpen]);\n        useEffect(() => {\n            if (isOpen) setHeight(ref.current?.getBoundingClientRect().height);\n            else setHeight(0);\n          }, [isOpen]);\n    }\n\n\n    return (\n        <>\n        <div className={collapsibleClassName}>\n          <div>\n            <div className={headerClassName}>\n              <div className={titleClassName}>{header}</div>\n              <button\n                type=\"button\"\n                className={iconButtonClassName}\n                onClick={handleFilterOpening}\n              >\n                <i\n                  className={`fas-edonec fa-chevron-down-edonec ${\n                    isOpen\n                      ? \"rotate-center-edonec down\"\n                      : \"rotate-center-edonec up\"\n                  }`}\n                />\n              </button>\n            </div>\n          </div>\n          <div className={contentClassName} style={{ height }}>\n            <div ref={ref}>\n              <div className={contentContainerClassName}>{children}</div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n    \n};\n\nexport default Collapse"],"names":[],"sourceRoot":""}