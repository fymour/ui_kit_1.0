{"version":3,"file":"main.c1db30aee2971fcc45fd.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAgBA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAcA;AAlCA;AAoCA","sources":["webpack://ui_kit/./src/Input/Input.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { useState } from 'react';\nimport './input.css';\n\ninterface InputProps {\n    id: string,\n    label: string,\n    value?: string,\n    error?: boolean,\n    disabled?: boolean,\n    success?: boolean,\n    placeholder: string,\n    // onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    size?: 'large' | 'medium' | 'small';\n    condition?: 'disabled' | 'error';\n}\n\n\nexport const Input = ({\n    id,\n    label ='',\n    placeholder ='',\n    disabled =false,\n    success = false,\n    error = false,\n    // onChange,\n    value = '',\n    size = 'medium',\n    ...props\n}:InputProps) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {\n      setInputValue(e.target.value);\n    };\n\n  \n    return (\n        <div className='input'>\n            <label className='input--label'>\n                {label}\n            </label>\n            <input \n                id={id} \n                className={`input--${size}`}\n                disabled={disabled}\n                onChange={handleInputChange}\n                value={inputValue}\n                placeholder={placeholder} \n                {...props}/>\n        </div>\n    )\n}\n\nexport default Input"],"names":[],"sourceRoot":""}