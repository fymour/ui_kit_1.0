{"version":3,"file":"main.3fa337cf9911fbc11867.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;;AAsBA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AALA;AADA;AAkBA;AAEA","sources":["webpack://ui_kit/./src/Input/Input.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useState } from 'react';\nimport './input.css';\n\n\ntype AllProps = Condition & InputProps;\n\n\ntype Condition = {\n    disabled?: boolean,\n    success?: boolean,\n    required: boolean\n    validate: Function | object\n}\n\ntype InputProps = {\n    id: string,\n    label: string,\n    value?: string,\n    placeholder: string,\n    onChange: (str: string) => void,\n    size?: 'large' | 'medium' | 'small';\n}\n\nexport const Input = ({\n    id,\n    label = '',\n    placeholder = '',\n    disabled = false,\n    onChange,\n    value,\n    size = 'medium',\n    ...props\n}: AllProps,) => {\n\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm<InputProps>();\n\n    const onSubmit: SubmitHandler<InputProps> = data => console.log(data);\n    const onSubmitError: SubmitHandler<InputProps> = data => console.log(data);\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n\n                <label className='input--label'>\n                    {label}\n                </label>\n                <input\n                    id={id}\n                    className={`input--${size}`}\n                    disabled={disabled}\n                    onChange={e => onChange(e.target.value)}\n                    value={value}\n                    placeholder={placeholder}\n                    {...props} />\n            </form>\n        </>\n\n    )\n}\n\nexport default Input"],"names":[],"sourceRoot":""}